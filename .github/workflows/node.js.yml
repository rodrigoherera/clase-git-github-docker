name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - name: Setup up DB credentials
      run: |
        echo "DB_HOST=${{ secrets.DB_HOST }}" >> $GITHUB_ENV
        echo "DB_USER=${{ secrets.DB_USER }}" >> $GITHUB_ENV
        echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> $GITHUB_ENV
        echo "DB_DATABASE=${{ secrets.DB_DATABASE }}" >> $GITHUB_ENV
    - run: npm ci
    - run: npm run build --if-present
    - run: npm test
  
  push_to_registry:
    name: Push Docker image to docker hub
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: Check out repo
        uses: actions/checkout@v3
      
      - name: Log in to docker hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: rodrigoherera/clase-git-github-docker

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./build/Dockerfile.prod
          push: true
          tags: rodrigoherera/clase-git-github-docker:${{ github.sha }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            DB_HOST=${{ secrets.DB_HOST }}
            DB_USER=${{ secrets.DB_USER }}
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            DB_DATABASE=${{ secrets.DB_DATABASE }}
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: push_to_registry

    steps:
    - name: executing remote ssh commands using password
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.KEY }}
        port: ${{ secrets.PORT }}
        passphrase: ${{ secrets.PASSPHRASE }}
        script: "/bin/bash /root/docker/deploy.sh ${{ github.sha }}"
